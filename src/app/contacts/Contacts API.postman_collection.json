{
	"info": {
		"_postman_id": "f1ddc663-eeda-4898-99e0-d70159217948",
		"name": "Contacts API",
		"description": "A collection for testing the Contacts API with Supabase backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43039101",
		"_collection_link": "https://crimson-station-799343.postman.co/workspace/205d4ffc-d629-4663-9523-065c618a1f08/collection/43039101-f1ddc663-eeda-4898-99e0-d70159217948?action=share&source=collection_link&creator=43039101"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login with Supabase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for access token in response",
									"pm.test(\"Response has access_token\", function () {",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.expect(jsonData.access_token).to.be.a('string').and.to.have.lengthOf.at.least(10);",
									"});",
									"",
									"// Save the token to environment variables",
									"if (jsonData.access_token) {",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    console.log(\"Access token saved to environment variables\");",
									"}",
									"",
									"// Save the user ID if available",
									"if (jsonData.user && jsonData.user.id) {",
									"    pm.environment.set(\"user_id\", jsonData.user.id);",
									"    console.log(\"User ID saved to environment variables\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "apikey",
								"value": "{{supabase_anon_key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{supabase_url}}/auth/v1/token?grant_type=password",
							"host": [
								"{{supabase_url}}"
							],
							"path": [
								"auth",
								"v1",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"description": "Authenticate with Supabase and get a JWT token"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for user_id in response",
									"pm.test(\"Response has user_id\", function () {",
									"    pm.expect(jsonData).to.have.property('user_id');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/me",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"me"
							]
						},
						"description": "Get the current authenticated user"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints to get JWT tokens for API access"
		},
		{
			"name": "Contact Lists",
			"item": [
				{
					"name": "Create Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Test for list ID in response",
									"pm.test(\"Response has list id\", function () {",
									"    pm.expect(jsonData).to.have.property('id');",
									"});",
									"",
									"// Save the list ID to environment variables",
									"if (jsonData.id) {",
									"    pm.environment.set(\"list_id\", jsonData.id);",
									"    console.log(\"List ID saved to environment variables: \" + jsonData.id);",
									"}",
									"",
									"// Verify list name and description",
									"pm.test(\"List name and description match\", function () {",
									"    var requestData = JSON.parse(pm.request.body.raw);",
									"    pm.expect(jsonData.name).to.eql(requestData.name);",
									"    pm.expect(jsonData.description).to.eql(requestData.description);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Contact List\",\n    \"description\": \"A list created for testing via Postman\"\n}"
						},
						"url": {
							"raw": "{{api_url}}/contact-lists/",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contact-lists",
								""
							]
						},
						"description": "Create a new contact list"
					},
					"response": []
				},
				{
					"name": "Get All Contact Lists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for lists array in response",
									"pm.test(\"Response has lists array\", function () {",
									"    pm.expect(jsonData).to.have.property('lists');",
									"    pm.expect(jsonData.lists).to.be.an('array');",
									"});",
									"",
									"// Test that at least one list exists",
									"pm.test(\"At least one list exists\", function () {",
									"    pm.expect(jsonData.lists.length).to.be.at.least(1);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contact-lists/",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contact-lists",
								""
							]
						},
						"description": "Get all contact lists for the current user"
					},
					"response": []
				},
				{
					"name": "Get Specific Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for list ID in response",
									"pm.test(\"Response has correct list id\", function () {",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"list_id\"));",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contact-lists/{{list_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contact-lists",
								"{{list_id}}"
							]
						},
						"description": "Get a specific contact list by ID"
					},
					"response": []
				},
				{
					"name": "Update Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Verify updated list name and description",
									"pm.test(\"List name and description updated correctly\", function () {",
									"    var requestData = JSON.parse(pm.request.body.raw);",
									"    pm.expect(jsonData.name).to.eql(requestData.name);",
									"    pm.expect(jsonData.description).to.eql(requestData.description);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test List\",\n    \"description\": \"This list has been updated via Postman\"\n}"
						},
						"url": {
							"raw": "{{api_url}}/contact-lists/{{list_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contact-lists",
								"{{list_id}}"
							]
						},
						"description": "Update an existing contact list"
					},
					"response": []
				},
				{
					"name": "Get List Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test response is an array",
									"pm.test(\"Response is an array\", function () {",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contact-lists/{{list_id}}/contacts",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contact-lists",
								"{{list_id}}",
								"contacts"
							]
						},
						"description": "Get all contacts in a specific list"
					},
					"response": []
				},
				{
					"name": "Delete Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for deletion confirmation",
									"pm.test(\"List was deleted\", function () {",
									"    pm.expect(jsonData).to.have.property('deleted');",
									"    pm.expect(jsonData.deleted).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contact-lists/{{list_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contact-lists",
								"{{list_id}}"
							]
						},
						"description": "Delete a contact list"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing contact lists"
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "Create Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Test for contact ID in response",
									"pm.test(\"Response has contact id\", function () {",
									"    pm.expect(jsonData).to.have.property('id');",
									"});",
									"",
									"// Save the contact ID to environment variables",
									"if (jsonData.id) {",
									"    pm.environment.set(\"contact_id\", jsonData.id);",
									"    console.log(\"Contact ID saved to environment variables: \" + jsonData.id);",
									"}",
									"",
									"// Verify contact name and phone",
									"pm.test(\"Contact name and phone match\", function () {",
									"    var requestData = JSON.parse(pm.request.body.raw);",
									"    pm.expect(jsonData.name).to.eql(requestData.name);",
									"    pm.expect(jsonData.phone).to.eql(requestData.phone);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Arya\",\n    \"phone\": \"+917352517742\",\n    \"metadata\": {\n        \"notes\": \"Test contact\",\n        \"source\": \"Postman Test\"\n    }\n}"
						},
						"url": {
							"raw": "{{api_url}}/contacts/list/{{list_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contacts",
								"list",
								"{{list_id}}"
							]
						},
						"description": "Create a new contact and add it to a list"
					},
					"response": []
				},
				{
					"name": "Get Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for contact ID in response",
									"pm.test(\"Response has correct contact id\", function () {",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"contact_id\"));",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contacts/{{contact_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						},
						"description": "Get a specific contact by ID"
					},
					"response": []
				},
				{
					"name": "Update Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Verify updated contact data",
									"pm.test(\"Contact updated correctly\", function () {",
									"    var requestData = JSON.parse(pm.request.body.raw);",
									"    pm.expect(jsonData.name).to.eql(requestData.name);",
									"    pm.expect(jsonData.phone).to.eql(requestData.phone);",
									"});",
									"",
									"// Verify metadata updates",
									"pm.test(\"Metadata updated correctly\", function () {",
									"    var requestData = JSON.parse(pm.request.body.raw);",
									"    pm.expect(jsonData.metadata).to.have.property('status');",
									"    pm.expect(jsonData.metadata.status).to.eql(requestData.metadata.status);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Arya Updated\",\n    \"phone\": \"+917352517742\",\n    \"metadata\": {\n        \"notes\": \"Updated test contact\",\n        \"source\": \"Postman Test\",\n        \"status\": \"active\"\n    }\n}"
						},
						"url": {
							"raw": "{{api_url}}/contacts/{{contact_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						},
						"description": "Update an existing contact"
					},
					"response": []
				},
				{
					"name": "Bulk Create Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Test for added_count in response",
									"pm.test(\"Response has added_count\", function () {",
									"    pm.expect(jsonData).to.have.property('added_count');",
									"});",
									"",
									"// Verify correct number of contacts added",
									"pm.test(\"Correct number of contacts added\", function () {",
									"    var requestData = JSON.parse(pm.request.body.raw);",
									"    var expectedCount = requestData.contacts.length;",
									"    pm.expect(jsonData.added_count).to.eql(expectedCount);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contacts\": [\n        {\n            \"name\": \"Pinto Singha\",\n            \"phone\": \"+918867706225\",\n            \"metadata\": {\n                \"notes\": \"Bulk added contact 1\",\n                \"source\": \"Postman Test\"\n            }\n        },\n        {\n            \"name\": \"Amol\",\n            \"phone\": \"+917795957544\",\n            \"metadata\": {\n                \"notes\": \"Bulk added contact 2\",\n                \"source\": \"Postman Test\"\n            }\n        },\n        {\n            \"name\": \"Yogesh\",\n            \"phone\": \"+917374858995\",\n            \"metadata\": {\n                \"notes\": \"Bulk added contact 3\",\n                \"source\": \"Postman Test\"\n            }\n        },\n        {\n            \"name\": \"Anup\",\n            \"phone\": \"+919590231115\",\n            \"metadata\": {\n                \"notes\": \"Bulk added contact 4\",\n                \"source\": \"Postman Test\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{api_url}}/api/contacts/list/{{list_id}}/bulk",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"api",
								"contacts",
								"list",
								"{{list_id}}",
								"bulk"
							]
						},
						"description": "Bulk create contacts and add them to a list"
					},
					"response": []
				},
				{
					"name": "Search Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test response is an array",
									"pm.test(\"Response is an array\", function () {",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contacts/search/?q=Arya",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contacts",
								"search",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "Arya"
								}
							]
						},
						"description": "Search for contacts matching a query"
					},
					"response": []
				},
				{
					"name": "Search Contacts in List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test response is an array",
									"pm.test(\"Response is an array\", function () {",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contacts/search/?q=Arya&list_id={{list_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contacts",
								"search",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "Arya"
								},
								{
									"key": "list_id",
									"value": "{{list_id}}"
								}
							]
						},
						"description": "Search for contacts in a specific list"
					},
					"response": []
				},
				{
					"name": "Remove Contact from List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for removal confirmation",
									"pm.test(\"Contact was removed from list\", function () {",
									"    pm.expect(jsonData).to.have.property('removed');",
									"    pm.expect(jsonData.removed).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contacts/list/{{list_id}}/{{contact_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contacts",
								"list",
								"{{list_id}}",
								"{{contact_id}}"
							]
						},
						"description": "Remove a contact from a list"
					},
					"response": []
				},
				{
					"name": "Delete Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body",
									"var jsonData = pm.response.json();",
									"",
									"// Test for successful response status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for deletion confirmation",
									"pm.test(\"Contact was deleted\", function () {",
									"    pm.expect(jsonData).to.have.property('deleted');",
									"    pm.expect(jsonData.deleted).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/contacts/{{contact_id}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						},
						"description": "Delete a contact"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing contacts within lists"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "supabase_url",
			"value": "https://your-project-ref.supabase.co",
			"type": "string"
		},
		{
			"key": "api_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}